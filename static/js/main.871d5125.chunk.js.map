{"version":3,"sources":["components/FormContact.tsx","components/SearchResultItem.tsx","components/SearchResult.tsx","components/SearchBox.tsx","models/FirebaseConfig.tsx","components/SingUp.tsx","components/FireBaseLogin.tsx","components/MapBox.tsx","models/MapBoxToken.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GenderEnum","SearchResultItem","clickItem","props","onClickItem","item","Card","className","CardHeader","onClick","this","avatar","Avatar","aria-label","type","charAt","toUpperCase","action","IconButton","title","display_name","subheader","CardContent","Typography","variant","color","component","CardActions","disableSpacing","React","Component","SearchResult","event","List","result","map","obj","index","key","SearchBox","onChangeSearch","setState","newSearch","target","value","onKeyPressSearch","getData","getMapQuestData","state","resultString","mapQuestResult","results","locations","onGetData","onGetMapQuestData","searchOnProgres","prevProps","prevState","console","log","LinearProgress","onChange","onKeyPress","placeholder","inputProps","resultMapQuest","url","fetch","then","response","json","data","JSON","stringify","catch","error","fdb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","createStyles","root","flexGrow","paperGrid","padding","spacing","textAlign","palette","text","secondary","App","useForm","handleSubmit","register","control","classes","onSubmit","auth","onAuthStateChanged","user","firestore","collection","add","docRef","id","Grid","container","direction","as","TextField","name","label","defaultValue","required","paper","marginTop","display","flexDirection","alignItems","margin","backgroundColor","main","form","width","submit","SignUp","useState","email","setEmail","password","setPassword","startlogin","setStartlogin","Container","maxWidth","CssBaseline","noValidate","xs","fullWidth","autoComplete","e","login","infoMessage","SingUpButton","openLoginDialog","setOpen","openSignInDialog","setOpenSignInDialog","loged","setLoged","setUser","setInfoMessage","infoMessageLogin","setInfoMessageLogin","signOut","userLoged","Dialog","onClose","open","signInWithEmailAndPassword","credential","message","createUserWithEmailAndPassword","code","mapboxgl","accessToken","MapBox","mapContainer","marker","draw","updateAndNotify","drawLog","getAll","getDataFromMapQuest","objectData","parseFloat","latLng","lng","lat","geoJsonData","features","getSource","addSource","addLayer","setData","getDataFromSearch","a","searchBackup","lon","points","bbox","buildBbox","fitBounds","rotateCamera","timestamp","rotateTo","duration","requestAnimationFrame","onClikItem","box","boundingbox","el","Number","handleCreateAccount","handleLoged","addControl","removeControl","toggleDrawer","anchor","drawer","drawerWidth","toggleDrawerEdit","drawerEdit","styles","position","overflowX","zIndex","breakpoints","up","flexShrink","drawerOpen","background","transition","transitions","create","easing","sharp","enteringScreen","drawerClose","leavingScreen","unit","zoom","Map","center","longitude","latitude","style","pitch","MapboxDraw","displayControlsDefault","controls","point","polygon","trash","NavigationControl","ScaleControl","on","getCenter","toFixed","getZoom","geojson","turf","Drawer","ref","geoNames","newTask","tasks","textParam","deleteTask","taskToDelete","filter","todo","addTask","preventDefault","previousState","onChangeTask","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.871d5125.chunk.js","sourcesContent":["import { Button, createStyles, Grid, makeStyles, TextField, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/firestore';\r\nimport { fdb } from \"../models/FirebaseConfig\";\r\nimport 'firebase/auth';\r\n\r\nenum GenderEnum {\r\n  female = \"female\",\r\n  male = \"male\"\r\n}\r\n\r\ninterface IFormInput {\r\n  title: String;\r\n  descryption: string;\r\n\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paperGrid: {\r\n      padding: theme.spacing(4),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function App() {\r\n  const { register, handleSubmit, control } = useForm<IFormInput>();\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = (data: IFormInput) => {\r\n    console.log(data)\r\n\r\n    fdb.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        fdb.firestore().collection('zgloszenia').add({ data }).then((docRef) => {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n          .catch((error) => {\r\n            console.error(\"Error adding document: \", error);\r\n          });\r\n      } else {\r\n        // No user is signed in.\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid className={classes.paperGrid} container spacing={3} direction=\"column\">\r\n\r\n        <Controller\r\n          as={<TextField />}\r\n          name=\"title\"\r\n          label=\"First Name\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          required\r\n        />\r\n        <Controller\r\n          as={<TextField />}\r\n          name=\"descryption\"\r\n          label=\"Descryption\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          required\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Send\r\n        </Button>\r\n\r\n      </Grid>\r\n\r\n    </form>\r\n  );\r\n}","import { eventNames } from 'process';\r\nimport React from 'react';\r\nimport './../css/SearchResult.css'\r\n\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\ninterface Props {\r\n    item: any;\r\n    onClickItem: (item: any) => void;\r\n}\r\n\r\n\r\n\r\n\r\nexport class SearchResultItem<SearchBox> extends React.Component<Props> {\r\n\r\n\r\n    clickItem = () => {\r\n\r\n        this.props.onClickItem(this.props.item)\r\n    }\r\n//<div className='item' onClick={this.clickItem}>{this.props.item.display_name}</div>\r\n    render() {\r\n        return (<div>\r\n            <Card className='root'>\r\n      <CardHeader\r\n      className='item'\r\n       onClick={this.clickItem}\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className='avatar'>\r\n            {this.props.item.type.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={this.props.item.display_name}\r\n        subheader={this.props.item.type}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        {this.props.item.display_name}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card></div>);\r\n\r\n    }\r\n}\r\n\r\nexport default SearchResultItem;\r\n","import { eventNames } from 'process';\r\nimport React from 'react';\r\nimport { searchModel } from \"./../models/SearchModel\";\r\nimport './../css/SearchResult.css'\r\nimport SearchResultItem from \"./SearchResultItem\";\r\nimport List from '@material-ui/core/List';\r\n\r\n\r\ninterface Props {\r\n    result: Array<searchModel>;\r\n    resultMapQuest: any;\r\n    onClickItem: (item: any) => void;\r\n}\r\n\r\nexport class SearchResult<SearchBox> extends React.Component<Props> {\r\n\r\n\r\n    componentDidUpdate() {\r\n        //console.log(\"zmiana2\")\r\n    }\r\n\r\n    clickItem = (event: any) => {\r\n        this.props.onClickItem(event)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <List className='listBox'>\r\n                {this.props.result?.map((obj, index) => {\r\n                    return <SearchResultItem key={index} item={obj} onClickItem={this.clickItem}></SearchResultItem>\r\n                })}\r\n\r\n            </List>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResult;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { SearchResult } from \"./SearchResult\";\r\nimport { searchModel } from \"./../models/SearchModel\";\r\nimport { MAPQUEST_ACCESS_TOKEN } from \"./../models/MapquestToken\";\r\nimport InputBase from '@material-ui/core/InputBase/InputBase';\r\nimport { IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport  \"./../css/SearchBox.css\";\r\n\r\n\r\ninterface Props {\r\n    newSearch?: string;\r\n    resultString?: string;\r\n    result: Array<searchModel>;\r\n    onGetData: (res: any) => void;\r\n    onGetMapQuestData: (res: any) => void;\r\n    mapQuestResult: any;\r\n    searchOnProgres?: boolean;\r\n    onClickItem: (item: any) => void;\r\n}\r\ninterface State {\r\n    newSearch?: string;\r\n    resultString?: string;\r\n    result?: Array<searchModel>;\r\n    onGetData: (res: any) => void;\r\n    onGetMapQuestData: (res: any) => void;\r\n    mapQuestResult?: any;\r\n    searchOnProgres?: boolean;\r\n    onClickItem: (item: any) => void;\r\n    \r\n\r\n}\r\n\r\nexport class SearchBox<SearchBox> extends React.Component<State, Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            resultString: 'Pusto',\r\n            result: props.result,\r\n            mapQuestResult: { results: [{ locations: [] }] },\r\n            onGetData: () => { },\r\n            onGetMapQuestData: () => { },\r\n            searchOnProgres: false,\r\n            onClickItem: () => {}\r\n        };\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps: any, prevState: any) {\r\n        if (prevState.result !== this.state.result) {\r\n            this.props.onGetData(this.state.result);\r\n        }\r\n        if (prevState.mapQuestResult !== this.state.mapQuestResult) {\r\n            this.props.onGetMapQuestData(this.state.mapQuestResult);\r\n        }\r\n    }\r\n\r\n    onClickItemChanged(event: React.ChangeEventHandler){\r\n        console.log(\"test\", event);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        console.log(\"Odlaczony\", this.state)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log(\"Odlaczony??????\", this.state)\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='mainSerachBox'>\r\n                    {this.state.searchOnProgres ? <LinearProgress />: ``}\r\n                    <div className='searchBox'>\r\n                        <InputBase  className='searchBoxInput' onChange={this.onChangeSearch} value={this.props.newSearch} onKeyPress={this.onKeyPressSearch}\r\n                            placeholder=\"Wyszukaj\"\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                        <IconButton type=\"submit\" onClick={this.onClick} className='iconButton' aria-label=\"search\">\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <SearchResult result={this.state.result} resultMapQuest={this.state.mapQuestResult} onClickItem={this.props.onClickItem}></SearchResult>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onChangeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            newSearch: `${event.target.value}`\r\n        });\r\n    };\r\n\r\n    onKeyPressSearch = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            this.getData();\r\n            this.getMapQuestData()\r\n        }\r\n    };\r\n\r\n    onClick = () => {\r\n        this.getData();\r\n        this.getMapQuestData()\r\n    }\r\n\r\n    getData() {\r\n        this.setState({ searchOnProgres: true })\r\n        const url = `https://nominatim.openstreetmap.org/?addressdetails=1&q=${this.state.newSearch}&format=json&limit=10`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ resultString: JSON.stringify(data) });\r\n                this.setState({ result: data });\r\n                this.setState({ searchOnProgres: false })\r\n\r\n            }\r\n            ).catch((error) => {\r\n                console.error('Error:', error);\r\n                this.setState({ resultString: JSON.stringify([]) });\r\n                this.setState({ result: [] });\r\n                this.setState({ searchOnProgres: false })\r\n            });\r\n    }\r\n\r\n    getMapQuestData() {\r\n       /*  const url = `https://overpass-api.de/api/interpreter`;\r\n        fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: 'node [amenity=drinking_water](41.88266210339971,12.486519813537598,41.89732595571203,12.497506141662598);out;'\r\n        })\r\n            .then(response => response)\r\n            .then(data => {\r\n                console.log(\"XXXXX\", data)\r\n                //this.setState({ mapQuestResult: data });\r\n\r\n            }\r\n            ).catch((error) => {\r\n                console.error('Error:', error);\r\n                //this.setState({ mapQuestResult: [] });\r\n            }); */\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default SearchBox;\r\n","import firebase from 'firebase/app';\r\n\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyBPnakkMCkHQR26zXRstzrBIorHAWo5H3w\",\r\n    authDomain: \"geostarapp.firebaseapp.com\",\r\n    databaseURL: \"https://geostarapp.firebaseio.com\",\r\n    projectId: \"geostarapp\",\r\n    storageBucket: \"geostarapp.appspot.com\",\r\n    messagingSenderId: \"593481844972\",\r\n    appId: \"1:593481844972:web:3d55715029e07c806efdc9\",\r\n    measurementId: \"G-MEWLDR8DWF\"\r\n  };\r\n\r\nexport const fdb = firebase.initializeApp(firebaseConfig);","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  onClickItem?: (item: any) => void;\r\n  createAccount?: (email: string, password: string) => void;\r\n  login: (email: string, password: string) => void;\r\n  label: string;\r\n  infoMessage: string;\r\n}\r\n\r\nexport default function SignUp(props: Props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [startlogin, setStartlogin] = useState(false);\r\n\r\n\r\n\r\n\r\n  const clickCreateAccount = () => {\r\n    setStartlogin(true)\r\n    props.login(email, password)\r\n  }\r\n\r\n  return (\r\n    \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      {startlogin ? <LinearProgress />: ``}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {props.label}\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={clickCreateAccount}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          {props.infoMessage}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","import { Dialog, IconButton } from '@material-ui/core';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport React from 'react';\r\nimport { fdb } from \"../models/FirebaseConfig\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport \"./../css/Button.css\";\r\n\r\nimport SingUp from \"./SingUp\";\r\n\r\ninterface Props {\r\n    userLoged: (loged: boolean) => void;\r\n}\r\n\r\n\r\n\r\nexport default function SingUpButton(props: Props) {\r\n    const [openLoginDialog, setOpen] = React.useState(false);\r\n    const [openSignInDialog, setOpenSignInDialog] = React.useState(false);\r\n    const [loged, setLoged] = React.useState(false);\r\n    const [user, setUser] = React.useState({});\r\n    const [infoMessage, setInfoMessage] = React.useState('');\r\n    const [infoMessageLogin, setInfoMessageLogin] = React.useState('');\r\n\r\n\r\n    const onClick = () => {\r\n        console.log(\"Get data\")\r\n    }\r\n\r\n    const login = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const createAccount = () => {\r\n        console.log(\"nowe konto\")\r\n        setOpenSignInDialog(true)\r\n    }\r\n\r\n    const handleCreateAccount = (email: string, password: string) => {\r\n        console.log(\"Tworze konto\")\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then((user) => {\r\n                console.log(`Account created`, user);\r\n                setOpenSignInDialog(false)\r\n                props.userLoged(true);\r\n                setLoged(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Create account\", error)\r\n                var errorCode = error.code;\r\n                setInfoMessage(error.message);\r\n\r\n\r\n            });\r\n    }\r\n\r\n    const handleCloseLogin = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleCloseSignIn = () => {\r\n        setOpenSignInDialog(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleLogin = (email: string, password: string) => {\r\n\r\n        const auth = fdb.auth()\r\n\r\n        auth.signInWithEmailAndPassword(email, password).then((user) => {\r\n            console.log(user, user.user, user.credential);\r\n\r\n            setUser(user);\r\n            setOpen(false);\r\n            setLoged(true);\r\n            props.userLoged(true);\r\n\r\n\r\n        })\r\n            .catch((error) => {\r\n                setInfoMessageLogin(error.message)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    const loginOut = () => {\r\n        console.log(\"Wylogowano\")\r\n        firebase.auth().signOut().then(() => {\r\n            setLoged(false);\r\n            props.userLoged(false);\r\n\r\n        }).catch(function (error) {\r\n            console.log(\"singOut\", error)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            { loged ? (<div className='iconButtonStyle'><IconButton className=\"logout\" title=\"Log out\" type=\"submit\" onClick={loginOut} aria-label=\"search\">\r\n                <AccountCircleIcon />\r\n            </IconButton></div>) : (\r\n                    <div className='iconButtonStyle'> <IconButton className=\"login\" title=\"Login\" type=\"submit\" onClick={login} aria-label=\"search\">\r\n                        <PersonIcon />\r\n                    </IconButton></div>\r\n                )}\r\n            { loged ? (\"\") : (\r\n                <div className='iconButtonStyle'>\r\n                    <IconButton className=\"create\" title=\"Create account\" type=\"submit\" onClick={createAccount} aria-label=\"search\">\r\n                        <PersonAddIcon />\r\n                    </IconButton>\r\n                </div>\r\n            )}\r\n\r\n\r\n\r\n\r\n            <Dialog onClose={handleCloseLogin} open={openLoginDialog}>\r\n                <SingUp infoMessage={infoMessageLogin} label=\"Login\" login={handleLogin}></SingUp>\r\n            </Dialog>\r\n            <Dialog onClose={handleCloseSignIn} open={openSignInDialog}>\r\n                <SingUp infoMessage={infoMessage} label=\"Sing up\" login={handleCreateAccount}></SingUp>\r\n            </Dialog>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}","// @ts-ignore\r\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\r\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\r\nimport * as turf from '@turf/turf';\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport React from \"react\";\r\nimport { MAPBOX_ACCESS_TOKEN } from \"../models/MapBoxToken\";\r\nimport \"./../css/Map.css\";\r\nimport \"./../css/Button.css\";\r\nimport { SearchBox } from \"./SearchBox\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FormContact from \"./FormContact\";\r\n\r\n//import FireBaseStart from \"./FireBaseStart\";\r\nimport FireBaseLogin from \"./FireBaseLogin\";\r\nimport { Button, Drawer, IconButton } from \"@material-ui/core\";\r\n\r\nmapboxgl.accessToken = MAPBOX_ACCESS_TOKEN;\r\n\r\ntype Props = {\r\n    longitude: number;\r\n    latitude: number;\r\n\r\n};\r\n\r\ntype State = {\r\n    lng: number;\r\n    lat: number;\r\n    zoom: number,\r\n    data?: any\r\n    points: Array<Object>\r\n    email: string;\r\n    password: string;\r\n    loged: boolean;\r\n    drawer: boolean;\r\n    drawerEdit: boolean;\r\n    searchBackup: Array<Object>;\r\n\r\n};\r\n\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\n\r\nclass MapBox extends React.Component<Props, State> {\r\n    private mapContainer: any;\r\n    private map: any;\r\n    private marker: any;\r\n    private draw: any;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            lng: 5,\r\n            lat: 34,\r\n            zoom: 0,\r\n            points: [],\r\n            email: '',\r\n            password: '',\r\n            loged: false,\r\n            drawer: false,\r\n            drawerEdit: false,\r\n            searchBackup: []\r\n        };\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(): void {\r\n        this.map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            center: [this.props.longitude, this.props.latitude],\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            zoom: 5,\r\n            pitch: 45\r\n        });\r\n\r\n        this.draw = new MapboxDraw({\r\n            displayControlsDefault: false,\r\n            controls: {\r\n                point: true,\r\n                polygon: true,\r\n                trash: true\r\n            }\r\n        });\r\n        this.map.addControl(new mapboxgl.NavigationControl());\r\n        this.map.addControl(new mapboxgl.ScaleControl());\r\n\r\n\r\n        this.map.on('load', () => {\r\n\r\n            this.map.addSource('point', {\r\n                'type': 'geojson',\r\n                'data': {\r\n                    'type': 'FeatureCollection',\r\n                    'features': []\r\n                }\r\n            });\r\n            this.map.addLayer({\r\n                'id': 'points',\r\n                'source': 'point',\r\n                'type': 'circle',\r\n                'paint': {\r\n                    'circle-radius': 20,\r\n                    'circle-color': 'red'\r\n                }\r\n            });\r\n        }\r\n        );\r\n\r\n        this.map.on('move', () => {\r\n            this.setState({\r\n                lng: this.map.getCenter().lng.toFixed(4),\r\n                lat: this.map.getCenter().lat.toFixed(4),\r\n                zoom: this.map.getZoom().toFixed(2)\r\n            });\r\n        });\r\n\r\n        this.map.on('draw.create', this.drawLog);\r\n        this.map.on('draw.delete', this.drawLog);\r\n        this.map.on('draw.update', this.drawLog);\r\n\r\n\r\n\r\n    }\r\n\r\n    updateAndNotify = (): void => {\r\n        console.log(\"LOGED 222\")\r\n\r\n\r\n    }\r\n\r\n    drawLog = () => {\r\n        console.log(\"draw\", this.draw.getAll())\r\n    }\r\n\r\n    private getDataFromMapQuest = (event: any) => {\r\n        console.log(\"getDataFromMapQuest =>\", event)\r\n        let objectData: any = event.results[0].locations.map((obj: any) => {\r\n            return {\r\n                'type': 'Feature',\r\n                'geometry': {\r\n                    'type': 'Point',\r\n\r\n                    'coordinates': [parseFloat(obj.latLng.lng), parseFloat(obj.latLng.lat)]\r\n                }\r\n            }\r\n        })\r\n\r\n        let geoJsonData = {\r\n            'type': 'FeatureCollection',\r\n            'features': []\r\n        }\r\n        geoJsonData.features = objectData;\r\n\r\n        if (!this.map.getSource('mapQuestLayer')) {\r\n            this.map.addSource('mapQuestLayer', {\r\n                'type': 'geojson',\r\n                'data': {\r\n                    'type': 'FeatureCollection',\r\n                    'features': []\r\n                }\r\n            });\r\n            this.map.addLayer({\r\n                'id': 'mapQuestLayerId',\r\n                'source': 'mapQuestLayer',\r\n                'type': 'circle',\r\n                'paint': {\r\n                    'circle-radius': 10,\r\n                    'circle-color': 'blue'\r\n                }\r\n            });\r\n        }\r\n        this.map.getSource('mapQuestLayer').setData(geoJsonData);\r\n\r\n    }\r\n\r\n    private buildBbox(geojson: any) {\r\n        return turf.bbox(geojson)\r\n    }\r\n\r\n    private getDataFromSearch = async (event: any) => {\r\n        this.setState({ searchBackup: event })\r\n        console.log(\"getDataFromSearch =>\", event)\r\n        let objectData: any = event.map((obj: any) => {\r\n            return {\r\n                'type': 'Feature',\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': [parseFloat(obj.lon), parseFloat(obj.lat)]\r\n                }\r\n            }\r\n        })\r\n        console.log(\"GEoJson\", objectData)\r\n        this.setState({ points: objectData })\r\n\r\n        let geoJsonData = {\r\n            'type': 'FeatureCollection',\r\n            'features': []\r\n        }\r\n        geoJsonData.features = objectData;\r\n\r\n        if (!this.map.getSource('point')) {\r\n            this.map.addSource('point', {\r\n                'type': 'geojson',\r\n                'data': {\r\n                    'type': 'FeatureCollection',\r\n                    'features': []\r\n                }\r\n            });\r\n            this.map.addLayer({\r\n                'id': 'points',\r\n                'source': 'point',\r\n                'type': 'circle',\r\n                'paint': {\r\n                    'circle-radius': 20,\r\n                    'circle-color': 'red'\r\n                }\r\n            });\r\n        }\r\n        this.map.getSource('point').setData(geoJsonData);\r\n        const bbox = this.buildBbox(geoJsonData)\r\n        await this.map.fitBounds(\r\n            [[bbox[0], bbox[1]], [bbox[2], bbox[3]]]\r\n        );\r\n    }\r\n\r\n    rotateCamera = (timestamp: number) => {\r\n        this.map.rotateTo((timestamp / 150) % 360, { duration: 0 });\r\n        requestAnimationFrame(this.rotateCamera);\r\n    }\r\n\r\n    onClikItem = (event: any) => {\r\n        let box = event.boundingbox.map((el: string) => Number(el))\r\n        this.map.fitBounds(\r\n            [[box[2], box[0]], [box[3], box[1]]]\r\n            , { padding: 20 });\r\n    }\r\n\r\n    handleCreateAccount = (email: string, password: string) => {\r\n        this.setState({ email })\r\n        this.setState({ password })\r\n\r\n\r\n    }\r\n\r\n    handleLoged = (loged: boolean) => {\r\n        console.log(\"LOGED\", loged)\r\n        this.setState({ loged })\r\n        if (this.state.loged) {\r\n            this.map.addControl(this.draw, 'top-right');\r\n\r\n        } else {\r\n            this.map.removeControl(this.draw)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleDrawer = (anchor: Anchor, open: boolean) => (\r\n        event: React.KeyboardEvent | React.MouseEvent,\r\n    ) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            ((event as React.KeyboardEvent).key === 'Tab' ||\r\n                (event as React.KeyboardEvent).key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ drawer: open });\r\n    };\r\n\r\n    drawerWidth = 240;\r\n\r\n    toggleDrawerEdit = (anchor: Anchor, open: boolean) => (\r\n        event: React.KeyboardEvent | React.MouseEvent,\r\n    ) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            ((event as React.KeyboardEvent).key === 'Tab' ||\r\n                (event as React.KeyboardEvent).key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ drawerEdit: open });\r\n    };\r\n\r\n    styles = (theme:any) => ({\r\n        drawer: {\r\n          position: \"absolute\",\r\n          overflowX: \"hidden\",\r\n          zIndex: theme.zIndex.drawer + 2,\r\n          [theme.breakpoints.up(\"sm\")]: {\r\n            position: \"relative\",\r\n            width: this.drawerWidth,\r\n            flexShrink: 0,\r\n            zIndex: theme.zIndex.drawer\r\n          },\r\n          whiteSpace: \"nowrap\"\r\n        },\r\n        drawerOpen: {\r\n          width: this.drawerWidth,\r\n          background: \"red\",\r\n          transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen\r\n          })\r\n        },\r\n        drawerClose: {\r\n          transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n          }),\r\n          overflowX: \"hidden\",\r\n          width: 0,\r\n          [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing.unit * 9 + 1\r\n          }\r\n        }\r\n      });\r\n\r\n \r\n    render(): JSX.Element {\r\n        return (\r\n            <div>\r\n                <div className='searchStyle'>\r\n                    <FireBaseLogin userLoged={this.handleLoged}></FireBaseLogin>\r\n                    <div className='iconButtonStyle'>\r\n                        <IconButton title=\"Szukaj\" type=\"submit\" onClick={this.toggleDrawer(\"left\", true)} aria-label=\"search\">\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n\r\n                    </div>\r\n                    <div className='iconButtonStyle'>\r\n                        <IconButton title=\"Dodaj\" type=\"submit\" onClick={this.toggleDrawerEdit(\"left\", true)} aria-label=\"search\">\r\n                            <EditIcon />\r\n                        </IconButton>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='fireBaseStyle'>\r\n\r\n                </div>\r\n\r\n\r\n                <Drawer\r\n                    open={this.state.drawer}\r\n                    onClose={this.toggleDrawer(\"left\", false)}\r\n                >\r\n                    <Button onClick={this.toggleDrawer(\"left\", false)}>\"X\"</Button>\r\n                    <SearchBox\r\n                        result={this.state.searchBackup}\r\n                        onGetMapQuestData={this.getDataFromMapQuest}\r\n                        onGetData={this.getDataFromSearch}\r\n                        onClickItem={this.onClikItem}\r\n                    />\r\n                </Drawer>\r\n               {/*  <MenuBar drawEdit={this.state.drawerEdit}></MenuBar> */}\r\n                <Drawer\r\n                    open={this.state.drawerEdit}\r\n                    onClose={this.toggleDrawer(\"left\", false)}\r\n                >\r\n                    <Button onClick={this.toggleDrawerEdit(\"left\", false)}>\"X\"</Button>\r\n                    <FormContact></FormContact>\r\n\r\n                </Drawer>\r\n\r\n                <div ref={el => this.mapContainer = el} className='mapContainer' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapBox;","export const MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoidGxvbWllaiIsImEiOiJja2cyNm4wY2YwZ2ZkMnlvNWFjdTB3ZWV2In0.Bo-nyJTaJwxOpgDFwIH_9g'\r\n","import React from 'react';\nimport Todos from './components/Todos';\nimport { Task } from './models/Task';\nimport AddTodo from './components/AddTodo';\nimport { SearchBox } from \"./components/SearchBox\";\nimport Map from './components/Map';\nimport MapBox from './components/MapBox';\n\ninterface State {\n  tasks: Task[];\n  newTask: Task;\n  geoNames: string\n  newSearch: string;\n  onChangeSearch?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nclass App extends React.Component<{}, State>  {\n  state = {\n    newSearch: '',\n    geoNames: \"\",\n    newTask: {\n      id: 1,\n      name: \"\"\n    },\n    tasks: [{\n      name: \"test4\",\n      id: 12\n    },\n    {\n      name: \"test5\",\n      id: 15\n    },\n    {\n      name: \"test6\",\n      id: 16\n    },\n    {\n      name: \"test7\",\n      id: 17\n    }]\n  };\n\n\n\n  textParam: string = \"Administrator\"\n\n  private deleteTask = (taskToDelete: Task) => {\n\n    console.log(`App.tsx -> ${taskToDelete.id}`)\n    this.setState({ tasks: [...this.state.tasks.filter(todo => todo.id !== taskToDelete.id)] })\n  };\n\n\n  private addTask = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    console.log('Dodaj')\n    this.setState(previousState => ({\n      newTask: {\n        id: previousState.newTask.id + 1,\n        name: \"\"\n      },\n      tasks: [...previousState.tasks, previousState.newTask]\n    }));\n  };\n\n\n  private onChangeTask = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(event.target.value)\n    this.setState({\n      newTask: {\n        ...this.state.newTask,\n        name: event.target.value\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <MapBox longitude={17} latitude={52}>\n          </MapBox>\n\n          {/* <AddTodo task={this.state.newTask} onAdd={this.addTask} onChange={this.onChangeTask} />\n\n\n          <Todos login={this.textParam} tasks={this.state.tasks} onDelete={this.deleteTask} />\n */}\n\n\n          {/* <SearchBox></SearchBox> */}\n\n\n\n\n        </header>\n      </div>\n    );\n  }\n}\n\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}